import{o as l,a as o}from"../chunks/chunk-CRR3HCM0.js";import{j as t}from"../chunks/chunk-BVtPDciO.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import{u as n}from"../chunks/chunk-BQoaMqtm.js";/* empty css                      *//* empty css                      */const a=[];function s(r){const e={a:"a",blockquote:"blockquote",code:"code",figure:"figure",p:"p",pre:"pre",span:"span",...n(),...r.components},{CodeSnippets:i}=e;return i||c("CodeSnippets"),t.jsxs(t.Fragment,{children:[t.jsxs(e.p,{children:["In production, the server build (which lives at ",t.jsx(e.code,{children:"dist/server/"}),") is automagically loaded."]}),`
`,t.jsxs(e.p,{children:["But, in some (rare) situations, the trick used by Vike doesn't work. In that case, we have to manually load the files living at ",t.jsx(e.code,{children:"dist/server/"}),". We do this by importing ",t.jsx(e.code,{children:"dist/server/importBuild.cjs"}),":"]}),`
`,t.jsxs(i,{hideToggle:!0,children:[t.jsx(e.figure,{"data-rehype-pretty-code-figure":"",children:t.jsx(e.pre,{tabIndex:"0","data-language":"js","data-theme":"github-light",children:t.jsxs(e.code,{"data-language":"js","data-theme":"github-light",style:{display:"grid"},children:[t.jsx(e.span,{"data-line":"",children:t.jsx(e.span,{style:{color:"#6A737D"},children:"// server.js"})}),`
`,t.jsx(e.span,{"data-line":"",children:" "}),`
`,t.jsx(e.span,{"data-line":"",children:t.jsx(e.span,{style:{color:"#6A737D"},children:"// We load the server build living at dist/server/"})}),`
`,t.jsxs(e.span,{"data-line":"",children:[t.jsx(e.span,{style:{color:"#D73A49"},children:"import"}),t.jsx(e.span,{style:{color:"#032F62"},children:" './path/to/dist/server/importBuild.cjs'"})]}),`
`,t.jsx(e.span,{"data-line":"",children:" "}),`
`,t.jsx(e.span,{"data-line":"",children:t.jsx(e.span,{style:{color:"#6A737D"},children:"// Your server code, e.g. Express.js code, Vercel serverless function, Cloudflare Worker, ..."})}),`
`,t.jsxs(e.span,{"data-line":"",children:[t.jsx(e.span,{style:{color:"#D73A49"},children:"import"}),t.jsx(e.span,{style:{color:"#24292E"},children:" { renderPage } "}),t.jsx(e.span,{style:{color:"#D73A49"},children:"from"}),t.jsx(e.span,{style:{color:"#032F62"},children:" 'vike/server'"})]}),`
`,t.jsx(e.span,{"data-line":"",children:t.jsx(e.span,{style:{color:"#6A737D"},children:"// ..."})})]})})}),t.jsx(e.figure,{"data-rehype-pretty-code-figure":"",children:t.jsx(e.pre,{tabIndex:"0","data-language":"ts","data-theme":"github-light",children:t.jsxs(e.code,{"data-language":"ts","data-theme":"github-light",style:{display:"grid"},children:[t.jsx(e.span,{"data-line":"",children:t.jsx(e.span,{style:{color:"#6A737D"},children:"// server.ts"})}),`
`,t.jsx(e.span,{"data-line":"",children:" "}),`
`,t.jsx(e.span,{"data-line":"",children:t.jsx(e.span,{style:{color:"#6A737D"},children:"// We load the server build living at dist/server/"})}),`
`,t.jsxs(e.span,{"data-line":"",children:[t.jsx(e.span,{style:{color:"#D73A49"},children:"import"}),t.jsx(e.span,{style:{color:"#032F62"},children:" './path/to/dist/server/importBuild.cjs'"})]}),`
`,t.jsx(e.span,{"data-line":"",children:" "}),`
`,t.jsx(e.span,{"data-line":"",children:t.jsx(e.span,{style:{color:"#6A737D"},children:"// Your server code, e.g. Express.js code, Vercel serverless function, Cloudflare Worker, ..."})}),`
`,t.jsxs(e.span,{"data-line":"",children:[t.jsx(e.span,{style:{color:"#D73A49"},children:"import"}),t.jsx(e.span,{style:{color:"#24292E"},children:" { renderPage } "}),t.jsx(e.span,{style:{color:"#D73A49"},children:"from"}),t.jsx(e.span,{style:{color:"#032F62"},children:" 'vike/server'"})]}),`
`,t.jsx(e.span,{"data-line":"",children:t.jsx(e.span,{style:{color:"#6A737D"},children:"// ..."})})]})})})]}),`
`,t.jsxs(e.p,{children:["If you use ",t.jsx(e.a,{href:"https://vitejs.dev/config/build-options.html#build-outdir",children:t.jsx(e.code,{children:"vite.config.js > build.outDir"})}),", then replace the path ",t.jsx(e.code,{children:"./path/to/dist/server/importBuild.cjs"})," with the path to your custom build directory ",t.jsx(e.code,{children:"./path/to/${build.outDir}/server/importBuild.cjs"}),"."]}),`
`,t.jsxs(e.blockquote,{children:[`
`,t.jsxs(e.p,{children:["See ",t.jsx(e.a,{href:"https://github.com/vikejs/vike/issues/403",children:"#403"})," if you're curious about the trick Vike uses to automagically import ",t.jsx(e.code,{children:"dist/server/"})," files."]}),`
`]})]})}function d(r={}){const{wrapper:e}={...n(),...r.components};return e?t.jsx(e,{...r,children:t.jsx(s,{...r})}):s(r)}function c(r,e){throw new Error("Expected component `"+r+"` to be defined: you likely forgot to import, pass, or provide it.")}const p=Object.freeze(Object.defineProperty({__proto__:null,default:d,pageSectionsExport:a},Symbol.toStringTag,{value:"Module"})),T={hasServerOnlyHook:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!1}},isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:o}},onCreatePageContext:{type:"cumulative",definedAtData:[{filePathToShowToUser:"@brillout/docpress/renderer/onCreatePageContext",fileExportPathToShowToUser:[]}],valueSerialized:[{type:"pointer-import",value:l}]},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/importBuild-dot-cjs/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:p}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}}};export{T as configValuesSerialized};
