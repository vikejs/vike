import{o,a}from"../chunks/chunk-CRR3HCM0.js";import{j as e}from"../chunks/chunk-BVtPDciO.js";import{L as n}from"../chunks/chunk-UcDNXDXa.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import{u as r}from"../chunks/chunk-BQoaMqtm.js";/* empty css                      *//* empty css                      */const d=[{pageSectionId:"detailed-comparison-table",pageSectionLevel:2,pageSectionTitle:"Detailed comparison table"},{pageSectionId:"user-feedback",pageSectionLevel:2,pageSectionTitle:"User feedback"},{pageSectionId:"deployment-hosting",pageSectionLevel:2,pageSectionTitle:"Deployment / hosting"},{pageSectionId:"next-js-optimised-for-vercel",pageSectionLevel:3,pageSectionTitle:"Next.js - optimised for Vercel"},{pageSectionId:"vike-hosting-agnostic",pageSectionLevel:3,pageSectionTitle:"Vike - hosting agnostic"},{pageSectionId:"minimal-and-self-contained-no-deps",pageSectionLevel:2,pageSectionTitle:"Minimal and self-contained (no deps)"},{pageSectionId:"caching",pageSectionLevel:2,pageSectionTitle:"Caching"},{pageSectionId:"next-js-caches-by-default-must-opt-out",pageSectionLevel:3,pageSectionTitle:"Next.js - caches by default, must opt-out"},{pageSectionId:"vike-opt-in-caching",pageSectionLevel:3,pageSectionTitle:"Vike - opt-in caching"},{pageSectionId:"server-vs-client-workloads",pageSectionLevel:2,pageSectionTitle:"Server vs. client workloads"},{pageSectionId:"next-js-server-first-oriented",pageSectionLevel:3,pageSectionTitle:"Next.js - server-first oriented"},{pageSectionId:"vike-granular-work-split-between-server-and-client",pageSectionLevel:3,pageSectionTitle:"Vike - granular work-split between server and client"},{pageSectionId:"ui-framework-agnostic",pageSectionLevel:2,pageSectionTitle:"UI Framework agnostic"},{pageSectionId:"custom-integrations",pageSectionLevel:2,pageSectionTitle:"Custom integrations"},{pageSectionId:"react-server-components",pageSectionLevel:2,pageSectionTitle:"React Server Components"},{pageSectionId:"build-your-own-framework",pageSectionLevel:2,pageSectionTitle:"Build your own framework"}];function s(i){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...r(),...i.components};return e.jsxs(e.Fragment,{children:[e.jsx(t.p,{children:"Vike differs from Next.js in three fundamental ways:"}),`
`,e.jsxs(t.ol,{children:[`
`,e.jsxs(t.li,{children:["Vike is agnostic to ",e.jsx(n,{href:"#deployment-hosting",doNotInferSectionTitle:!0}),"."]}),`
`,e.jsxs(t.li,{children:["Vike is full-fledged yet ",e.jsx(n,{href:"#minimal-and-self-contained-no-deps",doNotInferSectionTitle:!0}),"."]}),`
`,e.jsxs(t.li,{children:["Vike is ",e.jsx(n,{href:"#ui-framework-agnostic",doNotInferSectionTitle:!0}),"."]}),`
`]}),`
`,e.jsxs(t.p,{children:[`Beyond these structural differences,
Vike introduces features such as blazing fast HMR (powered by Vite), optional SSR, Domain-driven File Structure, state-of-the-art Code Splitting (powered by Vite/Rollup), Automatic Deployment Synchronization, `,e.jsx(n,{href:"#build-your-own-framework",doNotInferSectionTitle:!0}),", etc."]}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsx(t.p,{children:"Turbopack replicates some of Vite's techniques, but it's still in its infancy and it will take a while until Turbopack is production-ready. With Vite, you can use lightning fast DX today."}),`
`]}),`
`,e.jsx(t.p,{children:"Finally, Vike is a community project: instead of leaning on a framework with business interests that are fundamentally at odds with yours, use a community-driven project that is sponsored by, made for, and made by the community."}),`
`,e.jsx("h2",{id:"detailed-comparison-table",children:"Detailed comparison table"}),`
`,e.jsxs(t.p,{children:[e.jsx(t.a,{href:"https://github.com/vikejs/vike/issues/158#issuecomment-1250068578",children:"From @patryk-smc and @redbar0n"}),":"]}),`
`,e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsxs(t.tr,{children:[e.jsx(t.th,{}),e.jsx(t.th,{children:"Vike"}),e.jsx(t.th,{children:"Next.js"})]})}),e.jsxs(t.tbody,{children:[e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Bundler"}),e.jsx(t.td,{children:"Vite (dev: esbuild+ESM, prod: Rollup)"}),e.jsx(t.td,{children:"Webpack"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"UI Framework"}),e.jsx(t.td,{children:"Any (React, Preact, Solid, etc.)"}),e.jsx(t.td,{children:"React only"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Code-splitting and bundling"}),e.jsx(t.td,{children:"Yes"}),e.jsx(t.td,{children:"Yes"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"HMR"}),e.jsx(t.td,{children:"Yes, fast"}),e.jsx(t.td,{children:"Yes, slow"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Optional SSR"}),e.jsx(t.td,{children:"Yes"}),e.jsxs(t.td,{children:["Limited (app",e.jsx(t.a,{href:"https://gist.github.com/gaearon/9d6b8eddc7f5e647a054d7b333434ef6?permalink_comment_id=4508093#gistcomment-4508093",children:"[1]"}),", pages",e.jsx(t.a,{href:"https://nextjs.org/docs/app/building-your-application/deploying/static-exports#unsupported-features",children:"[2]"}),e.jsx(t.a,{href:"https://github.com/vercel/next.js/issues/54393",children:"[3]"}),", components",e.jsx(t.a,{href:"https://nextjs.org/docs/app/building-your-application/optimizing/lazy-loading#skipping-ssr",children:"[4]"}),e.jsx(t.a,{href:"https://www.npmjs.com/package/react-no-ssr",children:"[5]"}),")"]})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx("p",{align:"center",children:e.jsx(t.strong,{children:"SSR"})})}),e.jsx(t.td,{}),e.jsx(t.td,{})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Control"}),e.jsx(t.td,{children:"Full control"}),e.jsx(t.td,{children:"Limited / Black box"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Renderers"}),e.jsx(t.td,{children:"Yes, create as many you need"}),e.jsxs(t.td,{children:["Just one (",e.jsx(t.code,{children:"_app.ts"})," file)"]})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"RSC (React Server Components)"}),e.jsxs(t.td,{children:["Yes, ",e.jsx(n,{href:"/react#react-server-components",children:"partially"})]}),e.jsx(t.td,{children:"Yes, experimental"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx("p",{align:"center",children:e.jsx(t.strong,{children:"Routing"})})}),e.jsx(t.td,{}),e.jsx(t.td,{})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Filesystem Routing"}),e.jsx(t.td,{children:"Yes"}),e.jsx(t.td,{children:"Yes"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(n,{text:"Domain-driven Filesystem Routing",href:"/file-structure"})}),e.jsx(t.td,{children:"Yes"}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(n,{text:"Client Routing",href:"/client-routing"})}),e.jsx(t.td,{children:"Yes"}),e.jsxs(t.td,{children:["Yes, but ",e.jsx(t.a,{href:"https://github.com/vercel/next.js/discussions/64660",children:"limited"})," in SPA-only mode ***"]})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(n,{text:"Server Routing",href:"/server-routing"})}),e.jsx(t.td,{children:"Yes"}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(n,{text:"Base URL",href:"/base-url"})}),e.jsx(t.td,{children:"Yes"}),e.jsx(t.td,{children:"Limited"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx("p",{align:"center",children:e.jsx(t.strong,{children:"Pre-rendering (SSG)"})})}),e.jsx(t.td,{}),e.jsx(t.td,{})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Pre-rendering (SSG)"}),e.jsx(t.td,{children:"Yes, for pages"}),e.jsxs(t.td,{children:["Yes, for pages, or components (",e.jsx(t.a,{href:"https://nextjs.org/learn/dashboard-app/partial-prerendering",children:"Partial Pre-rendering"})," using RSC)"]})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Incremental Static Regeneration (ISR)"}),e.jsxs(t.td,{children:["No*, use ",e.jsx(n,{text:"@photonjs/vercel",href:"/vercel#isr"})]}),e.jsx(t.td,{children:"Yes, in the Node.js runtime, on Vercel"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"SPA-only mode (popular for PWAs) ***"}),e.jsx(t.td,{children:"Yes"}),e.jsxs(t.td,{children:["Limited: ",e.jsx(t.a,{href:"https://github.com/vercel/next.js/discussions/64660",children:"no dynamic routing in App Router"})]})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx("p",{align:"center",children:e.jsx(t.strong,{children:"Integrations"})})}),e.jsx(t.td,{}),e.jsx(t.td,{})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"HTTP server"}),e.jsx(t.td,{children:"No*, bring your own"}),e.jsxs(t.td,{children:["Baked-in, custom server partially supported with caveats",e.jsx(t.a,{href:"https://github.com/vikejs/vike/issues/158#issuecomment-1355306156",children:"[1]"}),e.jsx(t.a,{href:"https://stackoverflow.com/questions/58742343/do-i-have-to-use-express-in-next-js-project/70945468#70945468",children:"[2]"})]})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Apollo Client with SSR"}),e.jsx(t.td,{children:"Fully supported"}),e.jsx(t.td,{children:"Partially supported"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Relay with SSR"}),e.jsx(t.td,{children:"Fully supported"}),e.jsx(t.td,{children:"Partially supported"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx("p",{align:"center",children:e.jsx(t.strong,{children:"Extras"})})}),e.jsx(t.td,{}),e.jsx(t.td,{})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Head component"}),e.jsxs(t.td,{children:["No*, use a tool like ",e.jsx(t.a,{href:"https://github.com/nfl/react-helmet",children:"react-helmet"}),"."]}),e.jsx(t.td,{children:"Yes, next/head"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Image component"}),e.jsxs(t.td,{children:["No*, use an ",e.jsx(n,{href:"/img",children:"image optimizer tool"}),"."]}),e.jsx(t.td,{children:"Yes, next/image"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"API routes"}),e.jsxs(t.td,{children:["No*, use your server or an ",e.jsx(n,{text:"RPC tool",href:"/api-routes"}),"."]}),e.jsx(t.td,{children:"Yes"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Internationalization (i18n)"}),e.jsx(t.td,{children:"Yes"}),e.jsx(t.td,{children:"Limited"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(n,{href:"/deploy-sync"})}),e.jsx(t.td,{children:"Yes"}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx(t.a,{href:"https://land.vike.dev",children:"Build your own framework"})}),e.jsx(t.td,{children:"Yes"}),e.jsx(t.td,{children:"No"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:e.jsx("p",{align:"center",children:e.jsx(t.strong,{children:"Deployment options"})})}),e.jsx(t.td,{}),e.jsx(t.td,{})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Vercel"}),e.jsx(t.td,{children:"Yes, minimal config"}),e.jsx(t.td,{children:"Yes, zero config"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Cloudflare Workers"}),e.jsx(t.td,{children:"Yes, minimal config"}),e.jsx(t.td,{children:"Yes, but limited"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Node server (Docker, Heroku, Digital Ocean etc.)"}),e.jsx(t.td,{children:"Yes, minimal config"}),e.jsx(t.td,{children:"Yes, but limited"})]}),e.jsxs(t.tr,{children:[e.jsx(t.td,{children:"Caching (see own section above)"}),e.jsx(t.td,{children:"No*, if needed, use industry-standard caching**."}),e.jsxs(t.td,{children:["App Router ",e.jsx(t.a,{href:"https://nextjs.org/docs/app/building-your-application/caching",children:"caching"}),", ",e.jsx(t.a,{href:"https://www.reddit.com/r/nextjs/comments/15wc4nt/nextjs_caching_opt_out/",children:"opt-out"})]})]})]})]}),`
`,e.jsx(t.p,{children:"(*) Vike doesn't ship those extras by design."}),`
`,e.jsxs(t.p,{children:["(**) Industry-standard ways of caching is to use the HTTP Cache-Control header to ",e.jsx(t.a,{href:"https://web.dev/articles/http-cache",children:"cache in the client's browser"})," and potentially also on a shared/public ",e.jsx(t.a,{href:"https://www.cloudflare.com/lp/ppc/cdn-x/",children:"CDN"})," cache in front of your server side. Additionally, if you ever need even more caching than that, it's possible to have an in-memory cache on your server-side using e.g. ",e.jsx(t.a,{href:"https://developer.redis.com/howtos/solutions/microservices/caching/",children:"Redis"})," or Memcached."]}),`
`,e.jsx(t.p,{children:"(***) SPA-only mode means you make a static export of your app, into HTML, CSS and JS files, and serve them from a CDN, which means you don't need any server compute on requests (as opposed to SSR)."}),`
`,e.jsx("h2",{id:"user-feedback",children:"User feedback"}),`
`,e.jsxs(t.p,{children:[e.jsx(t.a,{href:"https://github.com/vikejs/vike/issues/158#issuecomment-934224512",children:"From @Axxxx0n"}),":"]}),`
`,e.jsxs(t.ol,{children:[`
`,e.jsx(t.li,{children:"Blazing fast development speed powered by Vite (on-demand transpiling, native ESM)."}),`
`,e.jsxs(t.li,{children:["Next.js has to have many examples and a whole plethora of libraries are existing just to integrate some library with Next.js because it's not trivial (for example ",e.jsx(t.a,{href:"https://github.com/isaachinman/next-i18next",children:"next-i18next"}),"). With Vike, you just read the documentation of the library you want to integrate and you're good to go."]}),`
`,e.jsx(t.li,{children:"When new React features arrive you can start to use it right away and don't have to wait for the Next.js team to integrate it. (Streaming API, server components, suspense on server, progressive rendering, etc.)"}),`
`,e.jsxs(t.li,{children:["Next.js can't read files in ",e.jsx(t.code,{children:"/public"})," directory after it was built, i.e. user uploaded images."]}),`
`,e.jsxs(t.li,{children:["With ",e.jsx(t.code,{children:"getServerSideProps()"}),", Next.js blocks client-side rendering."]}),`
`,e.jsxs(t.li,{children:["You cannot bypass data fetching on client-side navigation (",e.jsx(t.a,{href:"https://github.com/vercel/next.js/discussions/23921",children:"Next.js - 	#23921"}),") while with Vike you're flexible and can choose what you want."]}),`
`,e.jsx(t.li,{children:"Next.js is really pushing the Vercel platform and is starting to show in recent feature updates. Features that align with this are getting priority while important fixes are delayed."}),`
`,e.jsx(t.li,{children:"Next.js is leaning on serverless and complicates usage when you don't want it."}),`
`]}),`
`,e.jsx("h2",{id:"deployment-hosting",children:"Deployment / hosting"}),`
`,e.jsx("h3",{id:"next-js-optimised-for-vercel",children:"Next.js - optimised for Vercel"}),`
`,e.jsxs(t.p,{children:["Next.js is made by ",e.jsx(t.a,{href:"https://vercel.com",children:"Vercel"}),`, a hosting provider. It is therefore naturally optimised to run in their environment and infrastructure. But Vercel
is
`,e.jsx(t.a,{href:"https://eightify.app/summary/web-development/the-shift-from-vercel-to-aws-amplify-cost-and-scaling-benefits",children:"known"}),`
to
`,e.jsx(t.a,{href:"https://www.reddit.com/r/nextjs/comments/12t5nhi/needed_alternatives_for_vercel/",children:"become"}),`
very
`,e.jsx(t.a,{href:"https://x.com/zackerydev/status/1717556827569660378",children:"expensive"}),`
at
`,e.jsx(t.a,{href:"https://www.reddit.com/r/nextjs/comments/q7vw6p/cheaper_vercel_alternatives_specifically_to/hgm7d1t/",children:"scale"}),`.
What's worse is that `,e.jsx(t.a,{href:"https://vercel.com/pricing",children:"Vercel's pricing"}),` is
misleading (the pay-per-developer make it seem cheap but you usually pay for very expensive fees for exceeding limits),
`,e.jsx(t.a,{href:"https://www.reddit.com/r/nextjs/search?q=vercel+pricing&restrict_sr=on&include_over_18=on",children:"opaque"})," (e.g. you must have an enterprise plan if you have >10 team members which is ",e.jsx(t.a,{href:"https://vercel.com/docs/limits/overview#:~:text=Team%20Members%20per,Custom",children:"hidden in the fine print"}),`),
locks you in with `,e.jsx(t.a,{href:"https://gist.github.com/brillout/190bc676879a2a615d0bae031969f0a5",children:"extremely expensive egress fees"}),`,
hard to understand and nearly impossible to predict.
Such pricing is a no-go for large enterprises.`]}),`
`,e.jsx(t.p,{children:`You can self-host Next.js as a Node.js server, for example placed in a Docker container. But it won't work precisely the same way as on Vercel.
Furthermore, self-hosting Next.js as a Serverless or Edge application (i.e. replacing Vercel) is worse.`}),`
`,e.jsxs(t.p,{children:["An illustration of the problem: with Next.js server actions you no longer handwrite API endpoints - which means ",e.jsx(t.a,{href:"https://twitter.com/thdxr/status/1718308244383228124",children:"you don't have the ability to explicitly control versioning"}),". So requests from old clients can fail. Vercel solved this with their deployment infrastructure, instead of in Next.js itself. So if you use Next.js but not Vercel then you'll have to deal with this major problem yourself."]}),`
`,e.jsxs(t.p,{children:["These kinds of difficulties led the open source community to develop ",e.jsx(t.a,{href:"https://open-next.js.org/",children:"Open-Next.js"}),", a project to make Serverless deployment of Next.js on generic Functions-as-a-Service (FaaS) platforms easier (specifically on AWS Lambda). It allows easier integration with AWS and reduces Next.js's ties to Vercel. But that is a moving target with things breaking frequently, ",e.jsx(t.a,{href:"https://x.com/thdxr/status/1740115107005280592",children:"according to a person"})," working closely with the matter."]}),`
`,e.jsxs(t.p,{children:["Edge deployment with Next.js is another story. ",e.jsx(t.a,{href:"https://blog.cloudflare.com/next-on-pages",children:"Cloudflare"}),", the most prominent edge hosting provider, uses its own runtime instead of Node.js. Meaning that some Next.js apps built to run on Node.js won't immediately work on the Edge. So Next.js has an Edge Runtime toolkit/mode that uses only a subset of the Node.js API, but it has ",e.jsx(t.a,{href:"https://github.com/search?q=repo%3Avercel%2Fnext.js+edge+runtime&type=issues",children:"a lot of issues"}),"."]}),`
`,e.jsx("h3",{id:"vike-hosting-agnostic",children:"Vike - hosting agnostic"}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsx(t.p,{children:"With Vike, you keep full control over your server and you can use any deployment strategy."}),`
`]}),`
`,e.jsx(t.p,{children:"Vike is server and deployment agnostic, which means you can use any hosting provider and any server/serverless setup of choice. Vike is built with Serverless and Edge compatibility from the start."}),`
`,e.jsxs(t.p,{children:["From a server perspective, ",e.jsx(n,{text:"Vike is just a middleware",href:"/deploy"})," that doesn't depend on Node.js and that can run anywhere where JavaScript runs such as AWS, Vercel, Cloudflare, Deno Deploy, or even in the browser."]}),`
`,e.jsx(t.p,{children:"You can develop apps with a server that doesn't depend on Node.js and deploy it anywhere."}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsxs(t.p,{children:["You can also ",e.jsx(n,{href:"/pre-rendering",children:"pre-render"})," your app to remove the need for a production server: your app consists only of static assets (HTML, JS, CSS, images, ...) that can be deployed to any static host such as GitHub Pages."]}),`
`]}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsxs(t.p,{children:["You do need Node.js for local development, as the development runtime of ",e.jsx(t.a,{href:"https://vitejs.dev/",children:"Vite (the dev- and build-toolkit used by Vike)"})," depends on Node.js. But Vite's runtime isn't needed in production. Consequently, since Vike's runtime doesn't depend on Node.js, there are no dependencies on Node.js in production."]}),`
`]}),`
`,e.jsx(t.p,{children:"To integrate Vike, you simply add Vike's middleware to your server (Express.js, Fastify, Edge Worker, Serverless Function, etc.)."}),`
`,e.jsx(t.p,{children:"With Vike, you have full control over your server and over your deployment strategy, two critical aspects of your business."}),`
`,e.jsx("h2",{id:"minimal-and-self-contained-no-deps",children:"Minimal and self-contained (no deps)"}),`
`,e.jsxs(t.p,{children:[e.jsx(t.a,{href:"https://github.com/vikejs/vike/blob/3d042daee69b5f2ecf64a9f9ca7e4861740b1cd7/vike/package.json#L15-L26",children:"All dependencies"})," are either shared with Vite (e.g. ",e.jsx(t.a,{href:"https://github.com/SuperchupuDev/tinyglobby",children:e.jsx(t.code,{children:"tinyglobby"})}),") or fully owned (e.g. we own ",e.jsx(t.a,{href:"https://github.com/brillout/json-serializer",children:e.jsx(t.code,{children:"@brillout/json-serializer"})}),"). Adding Vike to your Vite app doesn't add any frivolous dependency."]}),`
`,e.jsx(t.p,{children:"We believe Vike hits the sweet spot of being a full-fledged frontend tool while avoiding unnecessary bells and whistles."}),`
`,e.jsx("h2",{id:"caching",children:"Caching"}),`
`,e.jsx("h3",{id:"next-js-caches-by-default-must-opt-out",children:"Next.js - caches by default, must opt-out"}),`
`,e.jsxs(t.p,{children:["Next.js aggressively uses ",e.jsx(t.a,{href:"https://nextjs.org/docs/app/building-your-application/caching",children:"caching"}),", for performance and cost-saving reasons. Less server load means your app uses less compute resources, which saves you money on Vercel's paid plans, but saves Vercel money on their free tier (which most developers will be on; Vercel's long-tail)."]}),`
`,e.jsxs(t.p,{children:["Next.js leans towards making as many routes as possible statically rendered (SSG over SSR wherever possible). Caching is enabled by default (both on the server and the client), and you have to ",e.jsx(t.strong,{children:"explicitly opt-out"})," to disable it (using more or less hacky solutions) each time you don't want it."]}),`
`,e.jsxs(t.p,{children:["But people are ",e.jsx(t.a,{href:"https://www.reddit.com/r/nextjs/comments/18tkmdb/has_anyone_abandoned_nextjs_after_using_it_on_a/kffjox2/",children:"finding"})," the aggressive ",e.jsx(t.a,{href:"https://www.reddit.com/r/nextjs/comments/18tkmdb/has_anyone_abandoned_nextjs_after_using_it_on_a/kfh6nh2/",children:"caching to be a nightmare"}),", and hard to disable. Caching can give a wrong/stale view of your app, and cost precious development time hunting for the cause."]}),`
`,e.jsxs(t.p,{children:["As the saying goes, ",e.jsx(t.em,{children:'"There are only two hard things in Computer Science: cache invalidation and naming things."'})," -- Phil Karlton"]}),`
`,e.jsx("h3",{id:"vike-opt-in-caching",children:"Vike - opt-in caching"}),`
`,e.jsx(t.p,{children:"Vike does not cache, by design, so by default your app will behave as you expect. If you do want caching, you can opt into it by using one of the many industry-standard caching tools."}),`
`,e.jsx("h2",{id:"server-vs-client-workloads",children:"Server vs. client workloads"}),`
`,e.jsx("h3",{id:"next-js-server-first-oriented",children:"Next.js - server-first oriented"}),`
`,e.jsx(t.p,{children:"Next.js - made by Vercel, a hosting provider - is server-focused. It now defaults to interpreting all React components in the React render tree as React Server Components (RSC), and if you don't want that, you have to opt-out."}),`
`,e.jsx(t.p,{children:'With RSCs, you have to inject the bundler directive "use client" (aka. start client bundling) into your React component tree at the start of every branch with components that you want to turn into Client Components.'}),`
`,e.jsxs(t.p,{children:["The default server orientation makes sense for ",e.jsx(t.em,{children:"websites"})," that consist of large static sections with no client interactivity. Using RSCs reduce the size of client-side bundles (and hydration), due to the JS code in RSC's only running on the server (e.g. useful for a static site using a heavy markdown library). But RSC's carry serialization and parsing overhead, has special rules (no state, context, or effects), and conceptual overhead that many developers struggle with."]}),`
`,e.jsxs(t.p,{children:["In addition, with Next.js new App Router, there's been a long standing open issue that you ",e.jsx(t.a,{href:"https://github.com/vercel/next.js/discussions/64660",children:"can't render dynamic routes in the app when it is exported to static assets"}),". This is the so called SPA-only mode (render everything only on the client; often used for PWAs), which means you could serving your app from a CDN, and thus obviating the need any server compute."]}),`
`,e.jsxs(t.p,{children:["In all, the fact that Next.js leans more on the server (and RSC's and caching by default) may not be what you want, especially if you are building a ",e.jsx(t.em,{children:"webapp"})," which you expect will become more and more dynamic and interactive anyway."]}),`
`,e.jsx("h3",{id:"vike-granular-work-split-between-server-and-client",children:"Vike - granular work-split between server and client"}),`
`,e.jsx(t.p,{children:"If your product either should be:"}),`
`,e.jsxs(t.ul,{children:[`
`,e.jsxs(t.li,{children:["leaning more towards being an ",e.jsx(t.em,{children:"app"})," than a ",e.jsx(t.em,{children:"site/page"}),"."]}),`
`,e.jsx(t.li,{children:"having a lot of dynamically generated and/or frequently updating content (coming from a DB), where caching doesn't give a lot of gains."}),`
`,e.jsxs(t.li,{children:["having a ",e.jsx(t.a,{href:"https://x.com/DevtoolsFM/status/1756091319632683073",children:"single unified model for data loading"})," that may include polling and ",e.jsx(t.a,{href:"https://www.flightcontrol.dev/blog/nextjs-app-router-migration-the-good-bad-and-ugly#bad-have-to-add-client-side-fetching-for-live-ui-updates",children:"live UI updates"}),"."]}),`
`,e.jsxs(t.li,{children:["local/offline-first, and/or a ",e.jsx(t.a,{href:"https://web.dev/learn/pwa/assets-and-data#platform-specific_apps_vs_pwa",children:"PWA"}),"."]}),`
`,e.jsxs(t.li,{children:["cross-platform (reusing code between web and native), since native platforms are typically client-centered (and it ",e.jsx(t.a,{href:"https://github.com/reactjs/rfcs/blob/main/text/0188-server-components.md#what-does-it-mean-for-react-native",children:"isn't prioritized"})," or very clear how React Server Components would work on React Native)."]}),`
`,e.jsx(t.li,{children:"using less server resources (scalability, cost-wise), in favor of requiring slightly more processing power on the client. Like using a SPA-only mode (static export, to serve from CDN, with no server compute needed), which is often a favored approach for PWAs."}),`
`]}),`
`,e.jsx(t.p,{children:"then the server-first orientation of Next.js and Vercel isn't helpful and can be a hindrance."}),`
`,e.jsxs(t.p,{children:[`With Vike, you can choose setups that fit the aforementioned use cases.
You can partially or completely opt out of SSR (turn on/off for whole app, `,e.jsx(n,{href:"/ssr",children:"for some pages"}),", or ",e.jsx(n,{href:"/clientOnly",children:"for some components"}),`).
You can also use SSR for the first page and then, from there on, use client-only navigation while fetching data directly from the data source (without involving your SSR server).`]}),`
`,e.jsx(t.p,{children:`Vike has first-class support for leaning towards the client-side, as well as first-class support for SSR use cases.
Vike is made by the community and has no incentive to favor any side of the work-split between the client and the server.`}),`
`,e.jsx("h2",{id:"ui-framework-agnostic",children:"UI Framework agnostic"}),`
`,e.jsxs(t.p,{children:["Next.js is deeply tied to React. So if you want to move to another UI framework later, like for instance ",e.jsx(t.a,{href:"https://www.solidjs.com/",children:"SolidJS"}),`, then it means a laborious refactor away from NextJS.
But with Vike, you keep your options open, and can swap out your UI framework rather easily with various `,e.jsx(n,{text:"UI extensions for Vike",href:"/extensions"}),"."]}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsx(t.p,{children:"Vike is completely agnostic to React and its source code has zero dependency on React. You can actually use Vike with any other UI Framework (Vue, Preact, Solid, etc.)."}),`
`,e.jsx(t.p,{children:"With Vike, you implement and fully control the React integration, which has many benefits. For example, you can use Relay in the same way that Facebook does (with a render-as-you-fetch stream) which isn't possible with Next.js."}),`
`]}),`
`,e.jsxs(t.p,{children:[`With Vike, you can integrate React yourself. This means you need to write a little bit more boilerplate, but in exchange you get a lot more flexibility.
You can even use `,e.jsx(n,{href:"/vike-react",children:"vike-react"}),` to do it for you, and later when you need more control you can eject.
If you want to switch UI framework to Solid, then you can swap vike-react with `,e.jsx(t.a,{href:"https://github.com/vikejs/vike-solid",children:"vike-solid"}),"."]}),`
`,e.jsx(t.p,{children:"Because you can control the React integration, you also have full control over the frontend integration of your favorite tools (data fetching, state management, authentication, etc.)."}),`
`,e.jsx(t.p,{children:"For example, you can use Relay and Apollo in ways that aren't possible with Next.js."}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsxs(t.p,{children:["Relay is a state-of-the-art GraphQL client developed and used at scale by Facebook (which invented GraphQL). The ",e.jsx(t.a,{href:"https://www.youtube.com/watch?v=lhVGdErZuN4",children:'YouTube video "Re-introducing Relay"'})," explains in detail the benefits of Relay."]}),`
`,e.jsx(t.p,{children:"Many users and sponsors leverage Vike's flexibility to integrate Relay with SSR Streaming."}),`
`]}),`
`,e.jsx(t.p,{children:"Vike includes everything you'd expect from a frontend framework: Client-side Routing, HMR, Filesystem Routing, Pre-rendering (SSG), Data Fetching, Code Splitting, Layouts, i18n, etc."}),`
`,e.jsx("h2",{id:"custom-integrations",children:"Custom integrations"}),`
`,e.jsx(t.p,{children:"As depicted above, Vike's philosophy is that you can integrate tools yourself instead of being locked into decisions made by your framework. Use any tool you want, however you want."}),`
`,e.jsx("h2",{id:"react-server-components",children:"React Server Components"}),`
`,e.jsx(t.p,{children:"React 18 introduced novel techniques that unlock many capabilities."}),`
`,e.jsxs(t.p,{children:["Vike, and in particular ",e.jsx(n,{href:"/vike-react",children:e.jsx(t.code,{children:"vike-react"})}),", extensively leverages React's 18 new techniques. (",e.jsx(n,{href:"/streaming",children:"Streaming"}),", ",e.jsx(n,{href:"/streaming#progressive-rendering",children:"Progressive Rendering"}),", independent and collocated data fetching, ",e.jsx(n,{href:"/RPC",children:"RPC"}),", etc.)"]}),`
`,e.jsxs(t.p,{children:["Vike provides you with extensive control for integrating tools as you see fit, such as control over React's SSR ",e.jsx(n,{href:"/streaming",children:"stream"}),". At the same time ",e.jsx("a",{href:"/extensions",children:"Vike extensions"})," provide built-in integrations for a quick start."]}),`
`,e.jsxs(t.p,{children:["One aspect ",e.jsx(t.code,{children:"vike-react"})," doesn't support yet are components that are loaded only on the server-side. While we are researching a DX for such components, we believe this new paradigm is too early for being used in production. See ",e.jsx(n,{href:"/react#react-server-components",doNotInferSectionTitle:!0}),"."]}),`
`,e.jsx("h2",{id:"build-your-own-framework",children:"Build your own framework"}),`
`,e.jsx(t.p,{children:"Vike is designed from the ground up to enable users to build frameworks on top of Vike."}),`
`,e.jsx(t.p,{children:"You can build your own framework with only hundreds of lines of code."}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsxs(t.p,{children:["While there are many ",e.jsx(t.a,{href:"https://land.vike.dev",children:"uses cases for building your own framework"}),", the most prominent one is ",e.jsx(t.a,{href:"https://land.vike.dev#scale",children:"building company internal frameworks"}),"."]}),`
`]}),`
`,e.jsx(t.p,{children:"We foster the proliferation of React frameworks, highly-tailored to specific use cases."}),`
`,e.jsxs(t.p,{children:["Read more at ",e.jsx(t.a,{href:"https://land.vike.dev",children:"Vike.land"}),"."]})]})}function l(i={}){const{wrapper:t}={...r(),...i.components};return t?e.jsx(t,{...i,children:e.jsx(s,{...i})}):s(i)}const c=Object.freeze(Object.defineProperty({__proto__:null,default:l,pageSectionsExport:d},Symbol.toStringTag,{value:"Module"})),V={hasServerOnlyHook:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!1}},isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:a}},onCreatePageContext:{type:"cumulative",definedAtData:[{filePathToShowToUser:"@brillout/docpress/renderer/onCreatePageContext",fileExportPathToShowToUser:[]}],valueSerialized:[{type:"pointer-import",value:o}]},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/nextjs/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:c}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}}};export{V as configValuesSerialized};
