import{o as a,a as d}from"../chunks/chunk-CRR3HCM0.js";import{j as e}from"../chunks/chunk-BVtPDciO.js";import{L as o}from"../chunks/chunk-UcDNXDXa.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import{u as i}from"../chunks/chunk-BQoaMqtm.js";/* empty css                      *//* empty css                      */const l=[];function n(r){const t={em:"em",p:"p",...i(),...r.components};return e.jsxs(e.Fragment,{children:[e.jsxs(t.p,{children:["Client-side rendered pages (aka ",e.jsx(t.em,{children:"client-side rendering"}),", ",e.jsx(t.em,{children:"CSR"}),", ",e.jsx(t.em,{children:"SPA"}),") are pages that are rendered only on the client-side. In other words, all the page's UI components are loaded and executed only on the client-side and never on the server-side."]}),`
`,e.jsxs(t.p,{children:["See ",e.jsx(o,{href:"/ssr"})," for configuring which of your pages should be rendered on the client-side and/or server-side."]}),`
`,e.jsxs(t.p,{children:["See ",e.jsx(o,{href:"/SSR-vs-SPA"})," for a guide on whether to choose client-side and/or serve-side rendering."]})]})}function s(r={}){const{wrapper:t}={...i(),...r.components};return t?e.jsx(t,{...r,children:e.jsx(n,{...r})}):n(r)}const p=Object.freeze(Object.defineProperty({__proto__:null,default:s,pageSectionsExport:l},Symbol.toStringTag,{value:"Module"})),w={hasServerOnlyHook:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!1}},isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:d}},onCreatePageContext:{type:"cumulative",definedAtData:[{filePathToShowToUser:"@brillout/docpress/renderer/onCreatePageContext",fileExportPathToShowToUser:[]}],valueSerialized:[{type:"pointer-import",value:a}]},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/spa/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:p}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}}};export{w as configValuesSerialized};
