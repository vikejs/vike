import{o as r,a}from"../chunks/chunk-CRR3HCM0.js";import{j as e}from"../chunks/chunk-BVtPDciO.js";import{L as s}from"../chunks/chunk-UcDNXDXa.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import{u as n}from"../chunks/chunk-BQoaMqtm.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */const l=[{pageSectionId:"when-to-eject",pageSectionLevel:2,pageSectionTitle:"When to eject?"}];function i(o){const t={a:"a",blockquote:"blockquote",code:"code",p:"p",...n(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsxs(t.p,{children:["The ",e.jsx(t.a,{href:"https://github.com/snake-py/eject",children:"eject package"})," enables you to take control of Vike extensions."]}),`
`,e.jsxs(t.p,{children:["It moves the code of the extension from ",e.jsx(t.code,{children:"/node_modules/vike-some-extension/"})," to your Git repository at ",e.jsx(t.code,{children:"/ejected/vike-some-extension/"}),". This means you can then fully modify the code of ",e.jsx(t.code,{children:"vike-some-extension"}),"."]}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsxs(t.p,{children:["The ejected code at ",e.jsx(t.code,{children:"/ejected/vike-some-extension"})," is its built JavaScript, but there is ",e.jsx(t.a,{href:"https://github.com/snake-py/eject/issues/4",children:"work-in-progress"})," for copying its original source code (e.g. TypeScript) from its Git repository (instead of copying ",e.jsx(t.code,{children:"/node_modules/vike-some-extension/"}),")."]}),`
`]}),`
`,e.jsx("h2",{id:"when-to-eject",children:"When to eject?"}),`
`,e.jsx(t.p,{children:"We recommend ejecting only as a last resort: only when it becomes clear that ejecting is the only option left for resolving your issue."}),`
`,e.jsx(t.p,{children:"In particular, before considering ejecting, create a new issue on GitHub. The maintainer of the Vike extension will most likely be able to help you, so that you don't have to eject. You can also create a Pull Request (which is still better than ejecting because you'll keep using a well-maintained integration, and also because you'll help the community)."}),`
`,e.jsxs(t.p,{children:["See also: ",e.jsx(s,{href:"/extension-vs-custom"}),"."]})]})}function d(o={}){const{wrapper:t}={...n(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}const c=Object.freeze(Object.defineProperty({__proto__:null,default:d,pageSectionsExport:l},Symbol.toStringTag,{value:"Module"})),P={hasServerOnlyHook:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!1}},isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:a}},onCreatePageContext:{type:"cumulative",definedAtData:[{filePathToShowToUser:"@brillout/docpress/renderer/onCreatePageContext",fileExportPathToShowToUser:[]}],valueSerialized:[{type:"pointer-import",value:r}]},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/eject/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:c}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}}};export{P as configValuesSerialized};
